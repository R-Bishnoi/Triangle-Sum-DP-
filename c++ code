

// memoization 


class Solution {
public:
    
int solve(vector<vector<int>>& t,vector<vector<int>>&dp ,int n,int i,int j){
       
       if(i==n-1)return t[n-1][j];
       
       if(dp[i][j]!=-1)return dp[i][j];
       
      int down = t[i][j] + solve(t,dp,n,i+1,j); 
       int dia = t[i][j] + solve(t,dp,n,i+1,j+1); 
       
       return dp[i][j]=min(down , dia);
       
       
   } 
    
    
    
    
    int minimumTotal(vector<vector<int>>& t) {
       
       int n=t.size();
       vector<vector<int>>dp(n,vector<int>(n,-1));
       
       return solve(t,dp,n,0,0);
        
    }   
    
};





// tabulation method 



class Solution {
public:
     
 int minimumTotal(vector<vector<int>>& arr) {
       
       int n=arr.size();
       vector<vector<int>>dp(n,vector<int>(n,-1));
       
   for(int j=0;j<n;j++)dp[n-1][j]=arr[n-1][j];
       
   
     
     
     for(int i=n-2;i>=0;i--){
         for(int j=i;j>=0;j--){

             int left=0;
             int right=0;
             
        left=dp[i+1][j]+arr[i][j];
        right=dp[i+1][j+1]+arr[i][j];
             
      dp[i][j]=min(left,right);
             
        
             
         }
     }
      
     return dp[0][0];
        
    }   
    
};



